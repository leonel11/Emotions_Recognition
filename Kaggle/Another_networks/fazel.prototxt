name: "Fazel"

#-------
# Input
#-------

layer {
  name: "data"
  type: "Data"
  include {
    phase: TRAIN
  }
 transform_param {
    mean_value: 127
    scale: 0.00390625
 }
 data_param {
    source: "../FER2013/train_lmdb"
    batch_size: 32
    backend: LMDB
  }
  top: "data"
  top: "label"
}

layer {
  name: "data"
  type: "Data"
  include {
    phase: TEST
  }
 transform_param {
    mean_value: 127
    scale: 0.00390625
 }
 data_param {
    source: "../FER2013/valid_lmdb"
    batch_size: 24
    backend: LMDB
  }
  top: "data"
  top: "label"
}


#---------
# Block 1
#---------

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
        type: "xavier"
    }
    bias_filler {
        type: "constant"
        value: 0
    }
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "norm1"
  top: "relu1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "relu1"
  top: "pool1"
  pooling_param {
    kernel_size: 2
    stride: 1
    pool: MAX
  }
}


#---------
# Block 2
#---------

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 128
    kernel_size: 5
    stride: 1
    weight_filler {
        type: "xavier"
    }
    bias_filler {
        type: "constant"
        value: 0
    }
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "norm2"
  top: "relu2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "relu2"
  top: "pool2"
  pooling_param {
    kernel_size: 2
    stride: 1
    pool: MAX
  }
}


#---------
# Block 3
#---------

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 1
    weight_filler {
        type: "xavier"
    }
    bias_filler {
        type: "constant"
        value: 0
    }
  }
}
layer {
  name: "norm3"
  type: "LRN"
  bottom: "conv3"
  top: "norm3"
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "norm3"
  top: "relu3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "relu3"
  top: "pool3"
  pooling_param {
    kernel_size: 2
    stride: 1
    pool: MAX
  }
}


#---------
# Block 4
#---------

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 1
    weight_filler {
        type: "xavier"
    }
    bias_filler {
        type: "constant"
        value: 0
    }
  }
}
layer {
  name: "norm4"
  type: "LRN"
  bottom: "conv4"
  top: "norm4"
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "norm4"
  top: "relu4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "relu4"
  top: "pool4"
  pooling_param {
    kernel_size: 2
    stride: 1
    pool: MAX
  }
}


#---------
# Block 5
#---------

layer {
  name: "fc5"
  type: "InnerProduct"
  bottom: "pool4"
  top: "fc5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 256
    weight_filler {
        type: "xavier"
    }
    bias_filler {
        type: "constant"
        value: 0
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "fc5"
  top: "relu5"
}


#---------
# Block 6
#---------

layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "relu5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 7
    weight_filler {
        type: "xavier"
    }
    bias_filler {
        type: "constant"
        value: 0
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "relu6"
}


#--------
# Output
#--------

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "relu6"
  bottom: "label"
  top: "loss/loss"
}
layer {
  name: "accuracy/top1"
  type: "Accuracy"
  bottom: "relu6"
  bottom: "label"
  top: "accuracy@1"
  include: {
      phase: TEST
  }
  accuracy_param {
    top_k: 1
  }
}
